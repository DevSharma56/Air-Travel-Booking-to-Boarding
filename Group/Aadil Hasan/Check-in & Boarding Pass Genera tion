import java.util.*;

class Passenger {
    private String passengerId;
    private String name;
    private String bookingReference;
    private boolean checkedIn;
    private String seatNumber;

    public Passenger(String passengerId, String name, String bookingReference) {
        this.passengerId = passengerId;
        this.name = name;
        this.bookingReference = bookingReference;
        this.checkedIn = false;
        this.seatNumber = "Not Assigned";
    }

    public String getBookingReference() { return bookingReference; }
    public boolean isCheckedIn() { return checkedIn; }
    public String getSeatNumber() { return seatNumber; }
    public void checkIn(String seatNumber) {
        this.checkedIn = true;
        this.seatNumber = seatNumber;
    }

    public void displayPassengerDetails() {
        System.out.println("Passenger: " + name);
        System.out.println("Booking Reference: " + bookingReference);
        System.out.println("Checked-In: " + (checkedIn ? "Yes" : "No"));
        System.out.println("Seat Number: " + seatNumber);
    }
}

class AirlineDatabase {
    private Map<String, Passenger> passengerRecords;

    public AirlineDatabase() {
        passengerRecords = new HashMap<>();
    }

    public void addPassenger(Passenger passenger) {
        passengerRecords.put(passenger.getBookingReference(), passenger);
    }

    public Passenger getPassenger(String bookingReference) {
        return passengerRecords.get(bookingReference);
    }
}

class CheckInSystem {
    private AirlineDatabase airlineDatabase;
    private List<String> availableSeats;

    public CheckInSystem(AirlineDatabase airlineDatabase) {
        this.airlineDatabase = airlineDatabase;
        this.availableSeats = new ArrayList<>(Arrays.asList("1A", "1B", "2A", "2B", "3A", "3B"));
    }

    public void checkInPassenger(String bookingReference) {
        Passenger passenger = airlineDatabase.getPassenger(bookingReference);
        if (passenger == null) {
            System.out.println("Error: Booking Reference Not Found!");
            return;
        }
        if (passenger.isCheckedIn()) {
            System.out.println("Passenger already checked in.");
            return;
        }
        System.out.println("Available Seats: " + availableSeats);
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter seat number to select: ");
        String chosenSeat = scanner.nextLine();
        if (!availableSeats.contains(chosenSeat)) {
            System.out.println("Invalid Seat Selection! Try Again.");
            return;
        }
        passenger.checkIn(chosenSeat);
        availableSeats.remove(chosenSeat);
        System.out.println("Check-in Successful! Boarding Pass Generated.\n");
        passenger.displayPassengerDetails();
    }
}

public class AirTravelCheckIn {
    public static void main(String[] args) {
        AirlineDatabase database = new AirlineDatabase();
        database.addPassenger(new Passenger("P001", "Adil Hasan", "BR123"));
        database.addPassenger(new Passenger("P002", "Dev Sharma", "BR456"));
        CheckInSystem checkInSystem = new CheckInSystem(database);

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\n==== CHECK-IN SYSTEM ====");
            System.out.println("1. Check-in Passenger");
            System.out.println("2. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            if (choice == 1) {
                System.out.print("Enter Booking Reference for Check-in: ");
                String bookingRef = scanner.nextLine();
                checkInSystem.checkInPassenger(bookingRef);
            } else if (choice == 2) {
                System.out.println("Exiting system. Goodbye!");
                break;
            } else {
                System.out.println("Invalid choice.");
            }
        }
    }
}
