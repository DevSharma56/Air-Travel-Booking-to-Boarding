import java.util.*;

enum UserRole {
    ADMIN, STAFF, CUSTOMER
}

class User {
    private String username;
    private UserRole role;

    public User(String username, UserRole role) {
        this.username = username;
        this.role = role;
    }
}

class Flight {
    private String flightNumber;
    private String origin;
    private String destination;
    private String status;

    public Flight(String flightNumber, String origin, String destination, String status) {
        this.flightNumber = flightNumber;
        this.origin = origin;
        this.destination = destination;
        this.status = status;
    }

    public String getFlightNumber() { return flightNumber; }
    public void updateStatus(String status) { this.status = status; }

    @Override
    public String toString() {
        return "Flight " + flightNumber + " from " + origin + " to " + destination + " is " + status;
    }
}

class SystemAdmin {
    private List<User> users = new ArrayList<>();
    private List<Flight> flights = new ArrayList<>();

    public void addUser(String username, UserRole role) {
        users.add(new User(username, role));
    }

    public void addFlight(String flightNumber, String origin, String destination, String status) {
        flights.add(new Flight(flightNumber, origin, destination, status));
    }

    public List<Flight> getFlights() { return flights; }
}

class FlightControlDashboard {
    private List<Flight> flights;

    public FlightControlDashboard(List<Flight> flights) {
        this.flights = flights;
    }

    public void updateFlightStatus(String flightNumber, String newStatus) {
        for (Flight flight : flights) {
            if (flight.getFlightNumber().equals(flightNumber)) {
                flight.updateStatus(newStatus);
                System.out.println("Updated: " + flight);
                return;
            }
        }
        System.out.println("Flight not found.");
    }

    public void displayFlights() {
        for (Flight flight : flights) {
            System.out.println(flight);
        }
    }
}

public class AirlineManagementSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        SystemAdmin admin = new SystemAdmin();
        admin.addUser("admin1", UserRole.ADMIN);
        admin.addFlight("AI101", "New York", "London", "Scheduled");
        admin.addFlight("BA202", "Los Angeles", "Tokyo", "Delayed");
        FlightControlDashboard dashboard = new FlightControlDashboard(admin.getFlights());

        while (true) {
            System.out.println("\n==== ADMIN MANAGEMENT SYSTEM ====");
            System.out.println("1. Display Flights");
            System.out.println("2. Update Flight Status");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    dashboard.displayFlights();
                    break;
                case 2:
                    System.out.print("Enter Flight Number: ");
                    String flightNumber = scanner.nextLine();
                    System.out.print("Enter New Status: ");
                    String newStatus = scanner.nextLine();
                    dashboard.updateFlightStatus(flightNumber, newStatus);
                    break;
                case 3:
                    System.out.println("Exiting system. Goodbye!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice.");
            }
        }
    }
}
