import java.util.*;

abstract class PaymentGateway {
    protected String gatewayName;

    public PaymentGateway(String gatewayName) {
        this.gatewayName = gatewayName;
    }

    public abstract boolean processPayment(double amount, String transactionId);
    public abstract boolean refundPayment(String transactionId, double amount);
}

class StripeGateway extends PaymentGateway {
    public StripeGateway() {
        super("Stripe");
    }

    @Override
    public boolean processPayment(double amount, String transactionId) {
        System.out.println("‚úÖ Payment of $" + amount + " successfully processed via " + gatewayName);
        return true;
    }

    @Override
    public boolean refundPayment(String transactionId, double amount) {
        System.out.println("üîÑ Refunding $" + amount + " via " + gatewayName);
        return true;
    }
}

class PayPalGateway extends PaymentGateway {
    public PayPalGateway() {
        super("PayPal");
    }

    @Override
    public boolean processPayment(double amount, String transactionId) {
        System.out.println("‚úÖ Payment of $" + amount + " successfully processed via " + gatewayName);
        return true;
    }

    @Override
    public boolean refundPayment(String transactionId, double amount) {
        System.out.println("üîÑ Refunding $" + amount + " via " + gatewayName);
        return true;
    }
}

class Transaction {
    private String transactionId;
    private double amount;
    private String status;

    public Transaction(String transactionId, double amount) {
        this.transactionId = transactionId;
        this.amount = amount;
        this.status = "Success";
    }

    public String getTransactionId() { return transactionId; }
    public double getAmount() { return amount; }
    public String getStatus() { return status; }
    public void setStatus(String status) { this.status = status; }

    public void printReceipt() {
        System.out.println("\nüßæ Payment Receipt");
        System.out.println("------------------------------");
        System.out.println("Transaction ID: " + transactionId);
        System.out.println("Amount Paid: $" + amount);
        System.out.println("Payment Status: " + status);
        System.out.println("------------------------------\n");
    }
}

class PaymentProcessor {
    private PaymentGateway paymentGateway;
    private List<Transaction> transactions;

    public PaymentProcessor(PaymentGateway paymentGateway) {
        this.paymentGateway = paymentGateway;
        this.transactions = new ArrayList<>();
    }

    public String makePayment(double amount) {
        String transactionId = "TXN" + System.currentTimeMillis();
        Transaction transaction = new Transaction(transactionId, amount);
        if (paymentGateway.processPayment(amount, transactionId)) {
            transactions.add(transaction);
            transaction.printReceipt();
        } else {
            transaction.setStatus("Failed");
            System.out.println("‚ùå Payment Failed.");
        }
        return transactionId;
    }
}

public class PaymentSimulation {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("üí≥ Select Payment Method:");
        System.out.println("1. Stripe");
        System.out.println("2. PayPal");
        System.out.print("Enter choice (1/2): ");
        int choice = scanner.nextInt();

        PaymentGateway selectedGateway = (choice == 1) ? new StripeGateway() : new PayPalGateway();
        PaymentProcessor paymentProcessor = new PaymentProcessor(selectedGateway);

        System.out.print("\nüíµ Enter Amount to Pay: $");
        double amount = scanner.nextDouble();
        paymentProcessor.makePayment(amount);

        scanner.close();
    }
}
